import { IMidwayContext } from '../../interface';
export declare enum RouteParamTypes {
    QUERY = 0,
    BODY = 1,
    PARAM = 2,
    HEADERS = 3,
    SESSION = 4,
    FILESTREAM = 5,
    FILESSTREAM = 6,
    NEXT = 7,
    REQUEST_PATH = 8,
    REQUEST_IP = 9,
    QUERIES = 10,
    FIELDS = 11,
    CUSTOM = 12
}
export interface RouterParamValue {
    index: number;
    type: RouteParamTypes;
    propertyData?: any;
}
export declare type KoaLikeCustomParamDecorator<T = unknown> = (ctx: IMidwayContext) => T | Promise<T>;
export declare type ExpressLikeCustomParamDecorator<T = unknown> = (req: any, res: any) => T | Promise<T>;
export declare type CustomParamDecorator<T = unknown> = KoaLikeCustomParamDecorator<T> | ExpressLikeCustomParamDecorator<T>;
export declare const createRequestParamDecorator: (transform: CustomParamDecorator) => ParameterDecorator;
export declare const Session: (property?: string) => ParameterDecorator;
export declare const Body: (property?: string) => ParameterDecorator;
export declare const Query: (property?: string) => ParameterDecorator;
export declare const Param: (property?: string) => ParameterDecorator;
export declare const Headers: (property?: string) => ParameterDecorator;
export declare const File: (property?: any) => ParameterDecorator;
export declare const Files: (property?: any) => ParameterDecorator;
export declare const RequestPath: () => ParameterDecorator;
export declare const RequestIP: () => ParameterDecorator;
export declare const Queries: (property?: string) => ParameterDecorator;
export declare const Fields: (property?: string) => ParameterDecorator;
//# sourceMappingURL=paramMapping.d.ts.map